{
  "_args": [
    [
      {
        "raw": "copyfiles@^1.2.0",
        "scope": null,
        "escapedName": "copyfiles",
        "name": "copyfiles",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "C:\\Repos\\CRM2016PowershellDevOps"
    ]
  ],
  "_from": "copyfiles@>=1.2.0 <2.0.0",
  "_id": "copyfiles@1.2.0",
  "_inCache": true,
  "_location": "/copyfiles",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/copyfiles-1.2.0.tgz_1486038152426_0.8791312305256724"
  },
  "_npmUser": {
    "name": "cwmma",
    "email": "calvin.metcalf@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "copyfiles@^1.2.0",
    "scope": null,
    "escapedName": "copyfiles",
    "name": "copyfiles",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/copyfiles/-/copyfiles-1.2.0.tgz",
  "_shasum": "a8da3ac41aa2220ae29bd3c58b6984294f2c593c",
  "_shrinkwrap": null,
  "_spec": "copyfiles@^1.2.0",
  "_where": "C:\\Repos\\CRM2016PowershellDevOps",
  "author": "",
  "bin": {
    "copyfiles": "./copyfiles",
    "copyup": "./copyup"
  },
  "bugs": {
    "url": "https://github.com/calvinmetcalf/copyfiles/issues"
  },
  "dependencies": {
    "glob": "^7.0.5",
    "ltcdr": "^2.2.1",
    "minimatch": "^3.0.3",
    "mkdirp": "^0.5.1",
    "noms": "0.0.0",
    "through2": "^2.0.1"
  },
  "description": "copy some files",
  "devDependencies": {
    "rimraf": "^2.2.6",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a8da3ac41aa2220ae29bd3c58b6984294f2c593c",
    "tarball": "https://registry.npmjs.org/copyfiles/-/copyfiles-1.2.0.tgz"
  },
  "gitHead": "2d971fabf6399ae5269873e73bb2ab73660f184c",
  "homepage": "https://github.com/calvinmetcalf/copyfiles#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    }
  ],
  "name": "copyfiles",
  "optionalDependencies": {},
  "readme": "copyfiles [![Build Status](https://travis-ci.org/calvinmetcalf/copyfiles.png)](https://travis-ci.org/calvinmetcalf/copyfiles)\n===\n\ncopy files easily\n\n### Install\n\n```bash\nnpm install copyfiles -g\n```\n### Command Line\n\ncopy some files, give it a bunch of arguments, (which can include globs), the last one\nis the out directory (which it will create if necessary).\n\n```bash\ncopyfiles foo foobar foo/bar/*.js out\n```\n\nyou now have a directory called out, with the files foo and foobar in it, it also has a directory named foo with a directory named\nbar in it that has all the files from foo/bar that match the glob.\n\nIf all the files are in a folder that you don't want in the path out path, ex:\n\n```bash\ncopyfiles something/*.js out\n```\n\nwhich would put all the js files in `out/something`, you can use the `--up` (or `-u`) option\n\n```bash\ncopyfiles -u 1 something/*.js out\n```\n\nwhich would put all the js files in `out`\n\nyou can also just do -f which will flatten all the output into one directory, so with files ./foo/a.txt and ./foo/bar/b.txt\n\n```bash\ncopyfiles -f ./foo/*.txt ./foo/bar/*.txt out\n```\n\nwill put a.txt and b.txt into out\n\nif your terminal doesn't support globstars then you can quote them\n\n```bash\ncopyfiles -f ./foo/**/*.txt out\n```\n\ndoes not work by default on a mac\n\nbut\n\n```bash\ncopyfiles -f './foo/**/*.txt' out\n```\n\ndoes.\n\nYou could quote globstars as a part of input:\n```bash\ncopyfiles some.json './some_folder/*.json' ./dist/ && echo 'JSON files copied.'\n```\n\nYou can use the -e option to exclude some files from the pattern, so to exclude all all files ending in .test.js you could do\n\n```bash\ncopyfiles -e \"**/*.test.js\" -f ./foo/**/*.js out\n```\n\nOther options include\n\n- `-a` or `--all` which includes files that start with a dot.\n- `-s` or `--soft` to soft copy, which will not overwrite existing files.\n\n## copyup\n\nalso creates a `copyup` command which is identical to `copyfiles` but `-up` defaults to 1\n\n### Programic API\n\n```js\nvar copyfiles = require('copyfiles');\n\ncopyfiles([paths], opt, callback);\n```\ntakes an array of paths, last one is the destination path, also takes an optional argument which the -u option if a number, otherwise if it's `true` it's the flat option.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/calvinmetcalf/copyfiles.git"
  },
  "scripts": {
    "test": "tape test/test.*.js | tspec"
  },
  "version": "1.2.0"
}
