{
  "_args": [
    [
      {
        "raw": "url-parse-as-address@1.0.0",
        "scope": null,
        "escapedName": "url-parse-as-address",
        "name": "url-parse-as-address",
        "rawSpec": "1.0.0",
        "spec": "1.0.0",
        "type": "version"
      },
      "C:\\Repos\\CRM2016PowershellDevOps\\node_modules\\surge"
    ]
  ],
  "_from": "url-parse-as-address@1.0.0",
  "_id": "url-parse-as-address@1.0.0",
  "_inCache": true,
  "_location": "/url-parse-as-address",
  "_nodeVersion": "0.10.35",
  "_npmUser": {
    "name": "isaacs",
    "email": "i@izs.me"
  },
  "_npmVersion": "2.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "url-parse-as-address@1.0.0",
    "scope": null,
    "escapedName": "url-parse-as-address",
    "name": "url-parse-as-address",
    "rawSpec": "1.0.0",
    "spec": "1.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/surge"
  ],
  "_resolved": "https://registry.npmjs.org/url-parse-as-address/-/url-parse-as-address-1.0.0.tgz",
  "_shasum": "fb80901883f338b3cbed3538f5faa26adaf7f2e7",
  "_shrinkwrap": null,
  "_spec": "url-parse-as-address@1.0.0",
  "_where": "C:\\Repos\\CRM2016PowershellDevOps\\node_modules\\surge",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/url-parse-as-address/issues"
  },
  "dependencies": {},
  "description": "Parse a url assuming `http` if no protocol or `//` is provided.",
  "devDependencies": {
    "tap": "^0.5.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "fb80901883f338b3cbed3538f5faa26adaf7f2e7",
    "tarball": "https://registry.npmjs.org/url-parse-as-address/-/url-parse-as-address-1.0.0.tgz"
  },
  "gitHead": "a8afa97576b3f49d7749f7a05b411d3e4768f062",
  "homepage": "https://github.com/isaacs/url-parse-as-address",
  "keywords": [
    "url",
    "parse",
    "addressbar",
    "http"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "isaacs",
      "email": "i@izs.me"
    }
  ],
  "name": "url-parse-as-address",
  "optionalDependencies": {},
  "readme": "# url-parse-as-address\n\nParse a url assuming `http` if no protocol or `//` is provided.\n\nUseful for parsing things like `foo.com` and not interpreting it as a\npath.\n\n## USAGE\n\n```javascript\nvar parse = require('url-parse-as-address')\nvar assert = require('assert')\n\nassert.deepEqual(parse('foo.com:1234/x?y=z#a=b'),\n  { protocol: 'http:',\n    slashes: true,\n    auth: null,\n    host: 'foo.com:1234',\n    port: '1234',\n    hostname: 'foo.com',\n    hash: '#a=b',\n    search: '?y=z',\n    query: 'y=z',\n    pathname: '/x',\n    path: '/x?y=z',\n    href: 'http://foo.com:1234/x?y=z#a=b' })\n\nassert.deepEqual(parse('foo.com:1234/x?y=z#a=b', true),\n  { protocol: 'http:',\n    slashes: true,\n    auth: null,\n    host: 'foo.com:1234',\n    port: '1234',\n    hostname: 'foo.com',\n    hash: '#a=b',\n    search: '?y=z',\n    query: { y: 'z' },\n    pathname: '/x',\n    path: '/x?y=z',\n    href: 'http://foo.com:1234/x?y=z#a=b' })\n\n// etc\n```\n\nBy default this lib assumes `http:` is the protocol if none is\nprovided, because that's what web browsers do.\n\n## API\n\n* `parse(url, parseQueryString)` Parse a string to object.\n\n* `parse.parse(..)` Same function, for symmetry to `url` builtin\n\n* `parse.format(url)` Like `url.format()`\n\n## SEE ALSO\n\n* https://iojs.org/api/url.html\n* https://nodejs.org/api/url.html\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/url-parse-as-address.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "1.0.0"
}
